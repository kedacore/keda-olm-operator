name: pr tests
on: [pull_request]

jobs:
  pr-test:
    name: PR test
    runs-on: ubuntu-latest
    container: kedacore/build-tools:main
    steps:
      - name: Install Go 1.14
        uses: actions/setup-go@v2
        with:
          go-version: '^1.14.4' 

      - name: Go modules cache
        uses: actions/cache@v1
        with:
          path: /go/pkg
          key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-go-

      - name: Install operator-sdk
        run: |
          RELEASE_VERSION=v1.2.0
          curl -LO https://github.com/operator-framework/operator-sdk/releases/download/${RELEASE_VERSION}/operator-sdk-${RELEASE_VERSION}-x86_64-linux-gnu
          chmod +x operator-sdk-${RELEASE_VERSION}-x86_64-linux-gnu && sudo mkdir -p /usr/local/bin/ && sudo cp operator-sdk-${RELEASE_VERSION}-x86_64-linux-gnu /usr/local/bin/operator-sdk && rm operator-sdk-${RELEASE_VERSION}-x86_64-linux-gnu

      - name: Check out code
        uses: actions/checkout@v2
        with:
          fetch-depth: 1

      - name: Download etcd and kube-apiserver
        run: |
          os=$(go env GOOS)
          arch=$(go env GOARCH)
          version=2.3.1
          curl -L https://github.com/kubernetes-sigs/kubebuilder/releases/download/v${version}/kubebuilder_${version}_${os}_${arch}.tar.gz | tar -xz -C /tmp/
          sudo mkdir -p /usr/local/kubebuilder/bin
          cd /tmp/kubebuilder_${version}_${os}_${arch}/bin
          sudo mv etcd kube-apiserver /usr/local/kubebuilder/bin

      - name: Login to Docker Hub
        env:
          DOCKER_HUB_ACCESS_TOKEN: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}
          DOCKER_HUB_USERNAME: ${{ secrets.DOCKER_HUB_USERNAME }}
        run: echo $DOCKER_HUB_ACCESS_TOKEN | docker login -u $DOCKER_HUB_USERNAME --password-stdin

      - name: Build and deploy KEDA olm operator index
        run: make deploy-olm

      - name: Setup test environment
        run: |
          kind create cluster
          kubectl apply -f config/testing/crds.yaml
          kubectl apply -f config/testing/olm.yaml

      - name: Run tests
        run: make test
